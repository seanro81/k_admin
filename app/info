Задание:
   --Создайте новый топик balanced_topic с 8 партициями и фактором репликации 3.
         kafka-topics.sh --bootstrap-server localhost:9094 --topic balanced_topic --create --partitions 8 --replication-factor 3
   --Определите текущее распределение партиций.
         kafka-topics.sh --bootstrap-server localhost:9094 --describe --topic balanced_topic

		 $ kafka-topics.sh --bootstrap-server localhost:9094 --describe --topic balanced_topic
[2025-03-23 17:23:52,281] WARN [AdminClient clientId=adminclient-1] Connection to node 2 (/127.0.0.1:9096) could not be established. Node may not be available. (org.apache.kafka.clients.NetworkClient)
[2025-03-23 17:23:52,283] WARN [AdminClient clientId=adminclient-1] Connection to node 1 (/127.0.0.1:9095) could not be established. Node may not be available. (org.apache.kafka.clients.NetworkClient)
Topic: balanced_topic   TopicId: XQFMvreLSbS_veXFbIwFlQ PartitionCount: 8       ReplicationFactor: 3    Configs:
        Topic: balanced_topic   Partition: 0    Leader: 1       Replicas: 1,2,0 Isr: 1,2,0
        Topic: balanced_topic   Partition: 1    Leader: 2       Replicas: 2,0,1 Isr: 2,0,1
        Topic: balanced_topic   Partition: 2    Leader: 0       Replicas: 0,1,2 Isr: 0,1,2
        Topic: balanced_topic   Partition: 3    Leader: 2       Replicas: 2,1,0 Isr: 2,1,0
        Topic: balanced_topic   Partition: 4    Leader: 1       Replicas: 1,0,2 Isr: 1,0,2
        Topic: balanced_topic   Partition: 5    Leader: 0       Replicas: 0,2,1 Isr: 0,2,1
        Topic: balanced_topic   Partition: 6    Leader: 2       Replicas: 2,1,0 Isr: 2,1,0
        Topic: balanced_topic   Partition: 7    Leader: 1       Replicas: 1,0,2 Isr: 1,0,2
   --Создайте JSON-файл reassignment.json для перераспределения партиций.


 {
  "version": 1,
  "partitions": [
    {"topic": "balanced_topic", "partition": 0, "replicas": [0, 1, 2], "log_dirs": ["any", "any"]},
    {"topic": "balanced_topic", "partition": 1, "replicas": [1, 2,0], "log_dirs": ["any", "any"]},
    {"topic": "balanced_topic", "partition": 2, "replicas": [2, 0,1], "log_dirs": ["any", "any"]},
    {"topic": "balanced_topic", "partition": 3, "replicas": [1, 0,2], "log_dirs": ["any", "any"]},
    {"topic": "balanced_topic", "partition": 4, "replicas": [0, 2,1], "log_dirs": ["any", "any"]},
    {"topic": "balanced_topic", "partition": 5, "replicas": [1, 2,0], "log_dirs": ["any", "any"]},
    {"topic": "balanced_topic", "partition": 6, "replicas": [2, 0,1], "log_dirs": ["any", "any"]},
    {"topic": "balanced_topic", "partition": 7, "replicas": [2, 1,0], "log_dirs": ["any", "any"]}
  ]
}


echo '{
  "version": 1,
  "partitions": [
    {"topic": "balanced_topic", "partition": 0, "replicas": [0, 1, 2], "log_dirs": ["any", "any",  "any"]},
    {"topic": "balanced_topic", "partition": 1, "replicas": [1, 2,0], "log_dirs": ["any", "any",  "any"]},
    {"topic": "balanced_topic", "partition": 2, "replicas": [2, 0,1], "log_dirs": ["any", "any",  "any"]},
    {"topic": "balanced_topic", "partition": 3, "replicas": [1, 0,2], "log_dirs": ["any", "any",  "any"]},
    {"topic": "balanced_topic", "partition": 4, "replicas": [0, 2,1], "log_dirs": ["any", "any",  "any"]},
    {"topic": "balanced_topic", "partition": 5, "replicas": [1, 2,0], "log_dirs": ["any", "any", "any"]},
    {"topic": "balanced_topic", "partition": 6, "replicas": [2, 0,1], "log_dirs": ["any", "any", "any"]},
    {"topic": "balanced_topic", "partition": 7, "replicas": [2, 1,0], "log_dirs": ["any", "any", "any"]}
  ]
}'  > reassignment.json

   --Перераспределите партиции.

    kafka-reassign-partitions.sh \
--bootstrap-server localhost:9094 \
--broker-list "1,2,3" \
--topics-to-move-json-file "/tmp/reassignment.json" \
--generate

Current partition replica assignment
{"version":1,"partitions":[]}

запуск
kafka-reassign-partitions.sh --bootstrap-server localhost:9094 --reassignment-json-file /tmp/reassignment.json --execute

$ kafka-reassign-partitions.sh --bootstrap-server localhost:9094 --reassignment-json-file /tmp/reassignment.json --execute
[2025-03-23 18:06:07,367] WARN [AdminClient clientId=reassign-partitions-tool] Connection to node 1 (/127.0.0.1:9095) could not be established. Node may not be available. (org.apache.kafka.clients.NetworkClient)
[2025-03-23 18:06:07,370] WARN [AdminClient clientId=reassign-partitions-tool] Connection to node 2 (/127.0.0.1:9096) could not be established. Node may not be available. (org.apache.kafka.clients.NetworkClient)
[2025-03-23 18:06:07,425] WARN [AdminClient clientId=reassign-partitions-tool] Connection to node 1 (/127.0.0.1:9095) could not be established. Node may not be available. (org.apache.kafka.clients.NetworkClient)
Current partition replica assignment

{"version":1,"partitions":[{"topic":"balanced_topic","partition":0,"replicas":[1,2,0],"log_dirs":["any","any","any"]},{"topic":"balanced_topic","partition":1,"replicas":[2,0,1],"log_dirs":["any","any","any"]},{"topic":"balanced_topic","partition":2,"replicas":[0,1,2],"log_dirs":["any","any","any"]},{"topic":"balanced_topic","partition":3,"replicas":[2,1,0],"log_dirs":["any","any","any"]},{"topic":"balanced_topic","partition":4,"replicas":[1,0,2],"log_dirs":["any","any","any"]},{"topic":"balanced_topic","partition":5,"replicas":[0,2,1],"log_dirs":["any","any","any"]},{"topic":"balanced_topic","partition":6,"replicas":[2,1,0],"log_dirs":["any","any","any"]},{"topic":"balanced_topic","partition":7,"replicas":[1,0,2],"log_dirs":["any","any","any"]}]}


      Проверьте статус перераспределения.
      Убедитесь, что конфигурация изменилась.

[2025-03-23 18:07:13,404] WARN [AdminClient clientId=adminclient-1] Connection to node 2 (/127.0.0.1:9096) could not be established. Node may not be available. (org.apache.kafka.clients.NetworkClient)
[2025-03-23 18:07:13,407] WARN [AdminClient clientId=adminclient-1] Connection to node 1 (/127.0.0.1:9095) could not be established. Node may not be available. (org.apache.kafka.clients.NetworkClient)
Topic: balanced_topic   TopicId: XQFMvreLSbS_veXFbIwFlQ PartitionCount: 8       ReplicationFactor: 3    Configs:
        Topic: balanced_topic   Partition: 0    Leader: 1       Replicas: 0,1,2 Isr: 1,2,0
        Topic: balanced_topic   Partition: 1    Leader: 2       Replicas: 1,2,0 Isr: 2,0,1
        Topic: balanced_topic   Partition: 2    Leader: 0       Replicas: 2,0,1 Isr: 0,1,2
        Topic: balanced_topic   Partition: 3    Leader: 2       Replicas: 1,0,2 Isr: 2,1,0
        Topic: balanced_topic   Partition: 4    Leader: 1       Replicas: 0,2,1 Isr: 1,0,2
        Topic: balanced_topic   Partition: 5    Leader: 0       Replicas: 1,2,0 Isr: 0,2,1
        Topic: balanced_topic   Partition: 6    Leader: 2       Replicas: 2,0,1 Isr: 2,1,0
        Topic: balanced_topic   Partition: 7    Leader: 1       Replicas: 2,1,0 Isr: 1,0,2



   --Смоделируйте сбой брокера:
     a.  Остановите брокер kafka-1.
	 docker stop kafka-1

     b.  Проверьте состояние топиков после сбоя. на kafka-0
	 kafka-topics.sh --bootstrap-server localhost:9092 --list
	 $ kafka-topics.sh --bootstrap-server localhost:9094 --describe --topic balanced_topic

	 kafka-topics.sh --bootstrap-server localhost:9094 --describe --topic balanced_topic
[2025-03-24 17:07:56,956] WARN [AdminClient clientId=adminclient-1] Connection to node 2 (/127.0.0.1:9096) could not be established. Node may not be available. (org.apache.kafka.clients.NetworkClient)
[2025-03-24 17:07:57,003] WARN [AdminClient clientId=adminclient-1] Connection to node 2 (/127.0.0.1:9096) could not be established. Node may not be available. (org.apache.kafka.clients.NetworkClient)
Topic: balanced_topic   TopicId: OACaktHYTGq2P4did61C9w PartitionCount: 8       ReplicationFactor: 3    Configs:
        Topic: balanced_topic   Partition: 0    Leader: 0       Replicas: 0,1,2 Isr: 2,0
        Topic: balanced_topic   Partition: 1    Leader: 2       Replicas: 1,2,0 Isr: 2,0
        Topic: balanced_topic   Partition: 2    Leader: 2       Replicas: 2,0,1 Isr: 0,2
        Topic: balanced_topic   Partition: 3    Leader: 0       Replicas: 1,0,2 Isr: 0,2
        Topic: balanced_topic   Partition: 4    Leader: 0       Replicas: 0,2,1 Isr: 2,0
        Topic: balanced_topic   Partition: 5    Leader: 2       Replicas: 1,2,0 Isr: 0,2
        Topic: balanced_topic   Partition: 6    Leader: 2       Replicas: 2,0,1 Isr: 2,0
        Topic: balanced_topic   Partition: 7    Leader: 2       Replicas: 2,1,0 Isr: 2,0

     c.  Запустите брокер заново.
	 docker start kafka-1

     d.  Проверьте, восстановилась ли синхронизация реплик.

	 Topic: balanced_topic   TopicId: OACaktHYTGq2P4did61C9w PartitionCount: 8       ReplicationFactor: 3    Configs:
        Topic: balanced_topic   Partition: 0    Leader: 0       Replicas: 0,1,2 Isr: 2,0,1
        Topic: balanced_topic   Partition: 1    Leader: 2       Replicas: 1,2,0 Isr: 2,0,1
        Topic: balanced_topic   Partition: 2    Leader: 2       Replicas: 2,0,1 Isr: 0,2,1
        Topic: balanced_topic   Partition: 3    Leader: 0       Replicas: 1,0,2 Isr: 0,2,1
        Topic: balanced_topic   Partition: 4    Leader: 0       Replicas: 0,2,1 Isr: 2,0,1
        Topic: balanced_topic   Partition: 5    Leader: 2       Replicas: 1,2,0 Isr: 0,2,1
        Topic: balanced_topic   Partition: 6    Leader: 2       Replicas: 2,0,1 Isr: 2,0,1
        Topic: balanced_topic   Partition: 7    Leader: 2       Replicas: 2,1,0 Isr: 2,0,1


C:\"Program Files"\OpenSSL-Win64\bin\openssl req -new -nodes -x509  -days 365 -newkey rsa:2048 -keyout ca.key -out ca.crt -config ca.cnf

C:\"Program Files"\OpenSSL-Win64\bin\openssl req -new  -newkey rsa:2048  -keyout kafka-1-creds/kafka-1.key -out kafka-1-creds/kafka-1.csr -config kafka-1-creds/kafka-1.cnf -nodes

C:\"Program Files"\OpenSSL-Win64\bin\openssl x509 -req -days 3650 -in kafka-1-creds/kafka-1.csr -CA ca/ca.crt -CAkey ca/ca.key -CAcreateserial -out kafka-1-creds/kafka-1.crt -extfile kafka-1-creds/kafka-1.cnf -extensions v3_req



C:\"Program Files"\OpenSSL-Win64\bin\openssl pkcs12 -export  -in kafka-1-creds/kafka-1.crt -inkey kafka-1-creds/kafka-1.key  -chain  -CAfile ca/ca.pem  -name kafka-1  -out kafka-1-creds/kafka-1.p12 -password pass:test123

keytool -importkeystore -deststorepass test123 -destkeystore kafka-1-creds/kafka.kafka-1.keystore.pkcs12  -srckeystore kafka-1-creds/kafka-1.p12 -deststoretype PKCS12  -srcstoretype PKCS12 -noprompt -srcstorepass test123

keytool -importkeystore -srckeystore kafka-1-creds/kafka-1.p12 -srcstoretype pkcs12  -destkeystore kafka-1-keystore.jks -deststoretype jks -deststorepass test123

keytool -import -file ca/ca.crt -alias ca -keystore kafka-1-creds/kafka.kafka-1.truststore.jks -storepass test123  -noprompt


Задание 2. Настройка защищённого соединения и управление доступом
===================================================================
Цель задания — настроить защищённое SSL-соединение для кластера Apache Kafka из трёх брокеров с использованием Docker Compose,
создать новый топик и протестировать отправку и получение зашифрованных сообщений.

Задание:
Создайте сертификаты для каждого брокера.
Создайте Truststore и Keystore для каждого брокера.

Настройте дополнительные брокеры в режиме SSL. Ранее в курсе вы уже работали с кластером Kafka, состоящим из трёх брокеров.
Используйте имеющийся docker-compose кластера и настройте для него SSL.
Создать два топика:
topic-1
topic-2

 Настроить права доступа:
topic-1: Доступен как для продюсеров, так и для консьюмеров.
topic-2:
Продюсеры могут отправлять сообщения.
Консьюмеры не имеют доступа к чтению данных.


Проверка коннекта
    netstat -an | grep 9093


/etc/kafka/server.properties

/etc/kafka/kafka_server_jaas.conf

https://qna.habr.com/q/1296324
https://milvus.io/docs/ru/connect_kafka_ssl.md

confluent configs
-----------------
https://github.com/vdesabou/kafka-docker-playground/blob/master/environment/sasl-plain/docker-compose.yml

Zookeeper client cannot authenticate using the 'Client' section of the supplied JAAS configuration
1) нужно настроить зукипер

https://habr.com/ru/companies/bercut/articles/764512/

https://stackoverflow.com/questions/43469962/kafka-sasl-zookeeper-authentication

https://stackoverflow.com/questions/43469962/kafka-sasl-zookeeper-authentication




Создать два топика:

topic-1
topic-2
 Настроить права доступа:
topic-1: Доступен как для продюсеров, так и для консьюмеров.
topic-2:
Продюсеры могут отправлять сообщения.
Консьюмеры не имеют доступа к чтению данных.

--------------------------------------------------------------------------------------------------
https://stackoverflow.com/questions/69752997/kafka-topics-sh-authentication
./kafka-topics.sh --list --bootstrap-server 10.10.10.16:9092 --command-config config.properties
---------------------------------------------------------------------------------------------------

1)  topic-1: Доступен как для продюсеров, так и для консьюмеров
 kafka-topics --bootstrap-server localhost:29092 --topic topic-1 --create --partitions 2 --replication-factor 3
 kafka-topics --bootstrap-server localhost:29092 --topic topic-2 --create --partitions 2 --replication-factor 3

kafka-acls --authorizer-properties zookeeper.connect=zookeeper:2181 --add --allow-principal User:consumer --operation Read --topic topic-1
kafka-acls --authorizer-properties zookeeper.connect=zookeeper:2181 --add --allow-principal User:consumer --operation Describe --topic topic-1


kafka-acls --authorizer-properties zookeeper.connect=zookeeper:2181 --add --allow-principal User:producer --operation Write --topic topic-1

kafka-acls --authorizer-properties zookeeper.connect=zookeeper:2181 --add --allow-principal User:producer --operation Write --topic topic-2


sh-4.4$ kafka-acls --authorizer-properties zookeeper.connect=zookeeper:2181 --list
Warning: support for ACL configuration directly through the authorizer is deprecated and will be removed in a future release. Please use --bootstrap-server instead to set ACLs through the admin client.
Current ACLs for resource `ResourcePattern(resourceType=TOPIC, name=topic-2, patternType=LITERAL)`:
        (principal=User:producer, host=*, operation=WRITE, permissionType=ALLOW)

Current ACLs for resource `ResourcePattern(resourceType=TOPIC, name=topic-1, patternType=LITERAL)`:
        (principal=User:consumer, host=*, operation=READ, permissionType=ALLOW)
        (principal=User:producer, host=*, operation=WRITE, permissionType=ALLOW)
        (principal=User:consumer, host=*, operation=DESCRIBE, permissionType=ALLOW)


kafka-configs --command-config /etc/kafka/client.properties --bootstrap-server hostname:port --entity-type brokers --entity-name <broker-ID> --alter --add-config listener.name.<listener-name>.ssl.keystore.location=<path-to-keystore.jks>


======================== для инфо ========================================================
ssl.keystore.filename=kafka-1.keystore.jks
ssl.key.credentials=kafka-1_ssl_pwd
delete.topic.enable=true
auto.create.topics.enable=true
ssl.key.password=test123
advertised.listeners=PLAINTEXT://kafka-1:29093,SSL://localhost:9093
listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL
ssl.truststore.filename=kafka.kafka-1.truststore.jks
authorizer.class.name=kafka.security.authorizer.AclAuthorizer
ssl.truststore.credentials=kafka-1_ssl_pwd
broker.id=1
ssl.keystore.password=test123
listeners=PLAINTEXT://:29093,SSL://:9093
ssl.keystore.location=/etc/kafka/secrets/kafka-1.keystore.jks
zookeeper.connect=zookeeper:2181
ssl.endpoint.identification.algorithm=https
log.dirs=/var/lib/kafka/data
offsets.topic.replication.factor=1
listener.security.protocol=SSL
ssl.keystore.credentials=kafka-1_ssl_pwd
=============================================================================================

   environment:
     KAFKA_BROKER_ID: 0
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_LISTENERS: PLAINTEXT://:29096,SSL://:9096
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:29096,SSL://localhost:9096
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL
     KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
     KAFKA_SSL_KEYSTORE_FILENAME: kafka-0.keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-0_ssl_pwd
     KAFKA_SSL_KEY_CREDENTIALS: kafka-0_ssl_pwd
     KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-0.truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-0_ssl_pwd
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/kafka/kafka_server_jaas.conf"
